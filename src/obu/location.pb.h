// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: location.proto

#ifndef PROTOBUF_location_2eproto__INCLUDED
#define PROTOBUF_location_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gps2Package {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_location_2eproto();
void protobuf_AssignDesc_location_2eproto();
void protobuf_ShutdownFile_location_2eproto();

class BaseMsg;
class LocationPB;
class RtcmDataPB;
class AlignDataPB;

enum MsgType {
  LocationMsgType = 0,
  RtcmDataType = 1,
  AlignDataType = 2
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = LocationMsgType;
const MsgType MsgType_MAX = AlignDataType;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class BaseMsg : public ::google::protobuf::Message {
 public:
  BaseMsg();
  virtual ~BaseMsg();

  BaseMsg(const BaseMsg& from);

  inline BaseMsg& operator=(const BaseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseMsg& default_instance();

  void Swap(BaseMsg* other);

  // implements Message ----------------------------------------------

  BaseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseMsg& from);
  void MergeFrom(const BaseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gps2Package.MsgType msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::gps2Package::MsgType msg_type() const;
  inline void set_msg_type(::gps2Package::MsgType value);

  // @@protoc_insertion_point(class_scope:gps2Package.BaseMsg)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msg_type_;
  friend void  protobuf_AddDesc_location_2eproto();
  friend void protobuf_AssignDesc_location_2eproto();
  friend void protobuf_ShutdownFile_location_2eproto();

  void InitAsDefaultInstance();
  static BaseMsg* default_instance_;
};
// -------------------------------------------------------------------

class LocationPB : public ::google::protobuf::Message {
 public:
  LocationPB();
  virtual ~LocationPB();

  LocationPB(const LocationPB& from);

  inline LocationPB& operator=(const LocationPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationPB& default_instance();

  void Swap(LocationPB* other);

  // implements Message ----------------------------------------------

  LocationPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LocationPB& from);
  void MergeFrom(const LocationPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gps2Package.MsgType msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::gps2Package::MsgType msg_type() const;
  inline void set_msg_type(::gps2Package::MsgType value);

  // required int32 secmark = 2;
  inline bool has_secmark() const;
  inline void clear_secmark();
  static const int kSecmarkFieldNumber = 2;
  inline ::google::protobuf::int32 secmark() const;
  inline void set_secmark(::google::protobuf::int32 value);

  // required int32 latitude = 3;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  inline ::google::protobuf::int32 latitude() const;
  inline void set_latitude(::google::protobuf::int32 value);

  // required int32 longitude = 4;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  inline ::google::protobuf::int32 longitude() const;
  inline void set_longitude(::google::protobuf::int32 value);

  // required int32 elev = 5;
  inline bool has_elev() const;
  inline void clear_elev();
  static const int kElevFieldNumber = 5;
  inline ::google::protobuf::int32 elev() const;
  inline void set_elev(::google::protobuf::int32 value);

  // required int32 accuracy = 6;
  inline bool has_accuracy() const;
  inline void clear_accuracy();
  static const int kAccuracyFieldNumber = 6;
  inline ::google::protobuf::int32 accuracy() const;
  inline void set_accuracy(::google::protobuf::int32 value);

  // required int32 heading = 7;
  inline bool has_heading() const;
  inline void clear_heading();
  static const int kHeadingFieldNumber = 7;
  inline ::google::protobuf::int32 heading() const;
  inline void set_heading(::google::protobuf::int32 value);

  // required int32 speed = 8;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 8;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // required int32 num_st = 9;
  inline bool has_num_st() const;
  inline void clear_num_st();
  static const int kNumStFieldNumber = 9;
  inline ::google::protobuf::int32 num_st() const;
  inline void set_num_st(::google::protobuf::int32 value);

  // required int32 model = 10;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 10;
  inline ::google::protobuf::int32 model() const;
  inline void set_model(::google::protobuf::int32 value);

  // required int32 acc = 11;
  inline bool has_acc() const;
  inline void clear_acc();
  static const int kAccFieldNumber = 11;
  inline ::google::protobuf::int32 acc() const;
  inline void set_acc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gps2Package.LocationPB)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_secmark();
  inline void clear_has_secmark();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_elev();
  inline void clear_has_elev();
  inline void set_has_accuracy();
  inline void clear_has_accuracy();
  inline void set_has_heading();
  inline void clear_has_heading();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_num_st();
  inline void clear_has_num_st();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_acc();
  inline void clear_has_acc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msg_type_;
  ::google::protobuf::int32 secmark_;
  ::google::protobuf::int32 latitude_;
  ::google::protobuf::int32 longitude_;
  ::google::protobuf::int32 elev_;
  ::google::protobuf::int32 accuracy_;
  ::google::protobuf::int32 heading_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 num_st_;
  ::google::protobuf::int32 model_;
  ::google::protobuf::int32 acc_;
  friend void  protobuf_AddDesc_location_2eproto();
  friend void protobuf_AssignDesc_location_2eproto();
  friend void protobuf_ShutdownFile_location_2eproto();

  void InitAsDefaultInstance();
  static LocationPB* default_instance_;
};
// -------------------------------------------------------------------

class RtcmDataPB : public ::google::protobuf::Message {
 public:
  RtcmDataPB();
  virtual ~RtcmDataPB();

  RtcmDataPB(const RtcmDataPB& from);

  inline RtcmDataPB& operator=(const RtcmDataPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtcmDataPB& default_instance();

  void Swap(RtcmDataPB* other);

  // implements Message ----------------------------------------------

  RtcmDataPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtcmDataPB& from);
  void MergeFrom(const RtcmDataPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gps2Package.MsgType msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::gps2Package::MsgType msg_type() const;
  inline void set_msg_type(::gps2Package::MsgType value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // required bytes buf = 3;
  inline bool has_buf() const;
  inline void clear_buf();
  static const int kBufFieldNumber = 3;
  inline const ::std::string& buf() const;
  inline void set_buf(const ::std::string& value);
  inline void set_buf(const char* value);
  inline void set_buf(const void* value, size_t size);
  inline ::std::string* mutable_buf();
  inline ::std::string* release_buf();
  inline void set_allocated_buf(::std::string* buf);

  // @@protoc_insertion_point(class_scope:gps2Package.RtcmDataPB)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_buf();
  inline void clear_has_buf();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msg_type_;
  ::google::protobuf::int32 size_;
  ::std::string* buf_;
  friend void  protobuf_AddDesc_location_2eproto();
  friend void protobuf_AssignDesc_location_2eproto();
  friend void protobuf_ShutdownFile_location_2eproto();

  void InitAsDefaultInstance();
  static RtcmDataPB* default_instance_;
};
// -------------------------------------------------------------------

class AlignDataPB : public ::google::protobuf::Message {
 public:
  AlignDataPB();
  virtual ~AlignDataPB();

  AlignDataPB(const AlignDataPB& from);

  inline AlignDataPB& operator=(const AlignDataPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlignDataPB& default_instance();

  void Swap(AlignDataPB* other);

  // implements Message ----------------------------------------------

  AlignDataPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlignDataPB& from);
  void MergeFrom(const AlignDataPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gps2Package.MsgType msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::gps2Package::MsgType msg_type() const;
  inline void set_msg_type(::gps2Package::MsgType value);

  // required int32 pos_type = 2;
  inline bool has_pos_type() const;
  inline void clear_pos_type();
  static const int kPosTypeFieldNumber = 2;
  inline ::google::protobuf::int32 pos_type() const;
  inline void set_pos_type(::google::protobuf::int32 value);

  // required int32 east = 3;
  inline bool has_east() const;
  inline void clear_east();
  static const int kEastFieldNumber = 3;
  inline ::google::protobuf::int32 east() const;
  inline void set_east(::google::protobuf::int32 value);

  // required int32 north = 4;
  inline bool has_north() const;
  inline void clear_north();
  static const int kNorthFieldNumber = 4;
  inline ::google::protobuf::int32 north() const;
  inline void set_north(::google::protobuf::int32 value);

  // required int32 up = 5;
  inline bool has_up() const;
  inline void clear_up();
  static const int kUpFieldNumber = 5;
  inline ::google::protobuf::int32 up() const;
  inline void set_up(::google::protobuf::int32 value);

  // required int32 master_id = 6;
  inline bool has_master_id() const;
  inline void clear_master_id();
  static const int kMasterIdFieldNumber = 6;
  inline ::google::protobuf::int32 master_id() const;
  inline void set_master_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gps2Package.AlignDataPB)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_pos_type();
  inline void clear_has_pos_type();
  inline void set_has_east();
  inline void clear_has_east();
  inline void set_has_north();
  inline void clear_has_north();
  inline void set_has_up();
  inline void clear_has_up();
  inline void set_has_master_id();
  inline void clear_has_master_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msg_type_;
  ::google::protobuf::int32 pos_type_;
  ::google::protobuf::int32 east_;
  ::google::protobuf::int32 north_;
  ::google::protobuf::int32 up_;
  ::google::protobuf::int32 master_id_;
  friend void  protobuf_AddDesc_location_2eproto();
  friend void protobuf_AssignDesc_location_2eproto();
  friend void protobuf_ShutdownFile_location_2eproto();

  void InitAsDefaultInstance();
  static AlignDataPB* default_instance_;
};
// ===================================================================


// ===================================================================

// BaseMsg

// required .gps2Package.MsgType msg_type = 1;
inline bool BaseMsg::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseMsg::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseMsg::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseMsg::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::gps2Package::MsgType BaseMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:gps2Package.BaseMsg.msg_type)
  return static_cast< ::gps2Package::MsgType >(msg_type_);
}
inline void BaseMsg::set_msg_type(::gps2Package::MsgType value) {
  assert(::gps2Package::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.BaseMsg.msg_type)
}

// -------------------------------------------------------------------

// LocationPB

// required .gps2Package.MsgType msg_type = 1;
inline bool LocationPB::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocationPB::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocationPB::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LocationPB::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::gps2Package::MsgType LocationPB::msg_type() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.msg_type)
  return static_cast< ::gps2Package::MsgType >(msg_type_);
}
inline void LocationPB::set_msg_type(::gps2Package::MsgType value) {
  assert(::gps2Package::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.msg_type)
}

// required int32 secmark = 2;
inline bool LocationPB::has_secmark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocationPB::set_has_secmark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LocationPB::clear_has_secmark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LocationPB::clear_secmark() {
  secmark_ = 0;
  clear_has_secmark();
}
inline ::google::protobuf::int32 LocationPB::secmark() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.secmark)
  return secmark_;
}
inline void LocationPB::set_secmark(::google::protobuf::int32 value) {
  set_has_secmark();
  secmark_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.secmark)
}

// required int32 latitude = 3;
inline bool LocationPB::has_latitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LocationPB::set_has_latitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LocationPB::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LocationPB::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline ::google::protobuf::int32 LocationPB::latitude() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.latitude)
  return latitude_;
}
inline void LocationPB::set_latitude(::google::protobuf::int32 value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.latitude)
}

// required int32 longitude = 4;
inline bool LocationPB::has_longitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LocationPB::set_has_longitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LocationPB::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LocationPB::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline ::google::protobuf::int32 LocationPB::longitude() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.longitude)
  return longitude_;
}
inline void LocationPB::set_longitude(::google::protobuf::int32 value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.longitude)
}

// required int32 elev = 5;
inline bool LocationPB::has_elev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LocationPB::set_has_elev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LocationPB::clear_has_elev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LocationPB::clear_elev() {
  elev_ = 0;
  clear_has_elev();
}
inline ::google::protobuf::int32 LocationPB::elev() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.elev)
  return elev_;
}
inline void LocationPB::set_elev(::google::protobuf::int32 value) {
  set_has_elev();
  elev_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.elev)
}

// required int32 accuracy = 6;
inline bool LocationPB::has_accuracy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LocationPB::set_has_accuracy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LocationPB::clear_has_accuracy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LocationPB::clear_accuracy() {
  accuracy_ = 0;
  clear_has_accuracy();
}
inline ::google::protobuf::int32 LocationPB::accuracy() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.accuracy)
  return accuracy_;
}
inline void LocationPB::set_accuracy(::google::protobuf::int32 value) {
  set_has_accuracy();
  accuracy_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.accuracy)
}

// required int32 heading = 7;
inline bool LocationPB::has_heading() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LocationPB::set_has_heading() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LocationPB::clear_has_heading() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LocationPB::clear_heading() {
  heading_ = 0;
  clear_has_heading();
}
inline ::google::protobuf::int32 LocationPB::heading() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.heading)
  return heading_;
}
inline void LocationPB::set_heading(::google::protobuf::int32 value) {
  set_has_heading();
  heading_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.heading)
}

// required int32 speed = 8;
inline bool LocationPB::has_speed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LocationPB::set_has_speed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LocationPB::clear_has_speed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LocationPB::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 LocationPB::speed() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.speed)
  return speed_;
}
inline void LocationPB::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.speed)
}

// required int32 num_st = 9;
inline bool LocationPB::has_num_st() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LocationPB::set_has_num_st() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LocationPB::clear_has_num_st() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LocationPB::clear_num_st() {
  num_st_ = 0;
  clear_has_num_st();
}
inline ::google::protobuf::int32 LocationPB::num_st() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.num_st)
  return num_st_;
}
inline void LocationPB::set_num_st(::google::protobuf::int32 value) {
  set_has_num_st();
  num_st_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.num_st)
}

// required int32 model = 10;
inline bool LocationPB::has_model() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LocationPB::set_has_model() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LocationPB::clear_has_model() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LocationPB::clear_model() {
  model_ = 0;
  clear_has_model();
}
inline ::google::protobuf::int32 LocationPB::model() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.model)
  return model_;
}
inline void LocationPB::set_model(::google::protobuf::int32 value) {
  set_has_model();
  model_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.model)
}

// required int32 acc = 11;
inline bool LocationPB::has_acc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LocationPB::set_has_acc() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LocationPB::clear_has_acc() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LocationPB::clear_acc() {
  acc_ = 0;
  clear_has_acc();
}
inline ::google::protobuf::int32 LocationPB::acc() const {
  // @@protoc_insertion_point(field_get:gps2Package.LocationPB.acc)
  return acc_;
}
inline void LocationPB::set_acc(::google::protobuf::int32 value) {
  set_has_acc();
  acc_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.LocationPB.acc)
}

// -------------------------------------------------------------------

// RtcmDataPB

// required .gps2Package.MsgType msg_type = 1;
inline bool RtcmDataPB::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtcmDataPB::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtcmDataPB::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtcmDataPB::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::gps2Package::MsgType RtcmDataPB::msg_type() const {
  // @@protoc_insertion_point(field_get:gps2Package.RtcmDataPB.msg_type)
  return static_cast< ::gps2Package::MsgType >(msg_type_);
}
inline void RtcmDataPB::set_msg_type(::gps2Package::MsgType value) {
  assert(::gps2Package::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.RtcmDataPB.msg_type)
}

// required int32 size = 2;
inline bool RtcmDataPB::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtcmDataPB::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtcmDataPB::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtcmDataPB::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 RtcmDataPB::size() const {
  // @@protoc_insertion_point(field_get:gps2Package.RtcmDataPB.size)
  return size_;
}
inline void RtcmDataPB::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.RtcmDataPB.size)
}

// required bytes buf = 3;
inline bool RtcmDataPB::has_buf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtcmDataPB::set_has_buf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtcmDataPB::clear_has_buf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtcmDataPB::clear_buf() {
  if (buf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_->clear();
  }
  clear_has_buf();
}
inline const ::std::string& RtcmDataPB::buf() const {
  // @@protoc_insertion_point(field_get:gps2Package.RtcmDataPB.buf)
  return *buf_;
}
inline void RtcmDataPB::set_buf(const ::std::string& value) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_ = new ::std::string;
  }
  buf_->assign(value);
  // @@protoc_insertion_point(field_set:gps2Package.RtcmDataPB.buf)
}
inline void RtcmDataPB::set_buf(const char* value) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_ = new ::std::string;
  }
  buf_->assign(value);
  // @@protoc_insertion_point(field_set_char:gps2Package.RtcmDataPB.buf)
}
inline void RtcmDataPB::set_buf(const void* value, size_t size) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_ = new ::std::string;
  }
  buf_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gps2Package.RtcmDataPB.buf)
}
inline ::std::string* RtcmDataPB::mutable_buf() {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gps2Package.RtcmDataPB.buf)
  return buf_;
}
inline ::std::string* RtcmDataPB::release_buf() {
  clear_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buf_;
    buf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RtcmDataPB::set_allocated_buf(::std::string* buf) {
  if (buf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buf_;
  }
  if (buf) {
    set_has_buf();
    buf_ = buf;
  } else {
    clear_has_buf();
    buf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gps2Package.RtcmDataPB.buf)
}

// -------------------------------------------------------------------

// AlignDataPB

// required .gps2Package.MsgType msg_type = 1;
inline bool AlignDataPB::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlignDataPB::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlignDataPB::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlignDataPB::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::gps2Package::MsgType AlignDataPB::msg_type() const {
  // @@protoc_insertion_point(field_get:gps2Package.AlignDataPB.msg_type)
  return static_cast< ::gps2Package::MsgType >(msg_type_);
}
inline void AlignDataPB::set_msg_type(::gps2Package::MsgType value) {
  assert(::gps2Package::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.AlignDataPB.msg_type)
}

// required int32 pos_type = 2;
inline bool AlignDataPB::has_pos_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlignDataPB::set_has_pos_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlignDataPB::clear_has_pos_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlignDataPB::clear_pos_type() {
  pos_type_ = 0;
  clear_has_pos_type();
}
inline ::google::protobuf::int32 AlignDataPB::pos_type() const {
  // @@protoc_insertion_point(field_get:gps2Package.AlignDataPB.pos_type)
  return pos_type_;
}
inline void AlignDataPB::set_pos_type(::google::protobuf::int32 value) {
  set_has_pos_type();
  pos_type_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.AlignDataPB.pos_type)
}

// required int32 east = 3;
inline bool AlignDataPB::has_east() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlignDataPB::set_has_east() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlignDataPB::clear_has_east() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlignDataPB::clear_east() {
  east_ = 0;
  clear_has_east();
}
inline ::google::protobuf::int32 AlignDataPB::east() const {
  // @@protoc_insertion_point(field_get:gps2Package.AlignDataPB.east)
  return east_;
}
inline void AlignDataPB::set_east(::google::protobuf::int32 value) {
  set_has_east();
  east_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.AlignDataPB.east)
}

// required int32 north = 4;
inline bool AlignDataPB::has_north() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlignDataPB::set_has_north() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlignDataPB::clear_has_north() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlignDataPB::clear_north() {
  north_ = 0;
  clear_has_north();
}
inline ::google::protobuf::int32 AlignDataPB::north() const {
  // @@protoc_insertion_point(field_get:gps2Package.AlignDataPB.north)
  return north_;
}
inline void AlignDataPB::set_north(::google::protobuf::int32 value) {
  set_has_north();
  north_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.AlignDataPB.north)
}

// required int32 up = 5;
inline bool AlignDataPB::has_up() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlignDataPB::set_has_up() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlignDataPB::clear_has_up() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlignDataPB::clear_up() {
  up_ = 0;
  clear_has_up();
}
inline ::google::protobuf::int32 AlignDataPB::up() const {
  // @@protoc_insertion_point(field_get:gps2Package.AlignDataPB.up)
  return up_;
}
inline void AlignDataPB::set_up(::google::protobuf::int32 value) {
  set_has_up();
  up_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.AlignDataPB.up)
}

// required int32 master_id = 6;
inline bool AlignDataPB::has_master_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlignDataPB::set_has_master_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlignDataPB::clear_has_master_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlignDataPB::clear_master_id() {
  master_id_ = 0;
  clear_has_master_id();
}
inline ::google::protobuf::int32 AlignDataPB::master_id() const {
  // @@protoc_insertion_point(field_get:gps2Package.AlignDataPB.master_id)
  return master_id_;
}
inline void AlignDataPB::set_master_id(::google::protobuf::int32 value) {
  set_has_master_id();
  master_id_ = value;
  // @@protoc_insertion_point(field_set:gps2Package.AlignDataPB.master_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gps2Package

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gps2Package::MsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gps2Package::MsgType>() {
  return ::gps2Package::MsgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_location_2eproto__INCLUDED
